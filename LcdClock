import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

import com.fazecast.jSerialComm.SerialPort;

public class LcdClock {

    static SerialPort chosenPort;                       //创建一个静态的SerialPort(串行端口)对象chosenPort(选择端口)引用；

    public static void main(String[] args) {            //main方法

        // create and configure the window
        JFrame window = new JFrame();                   //创建JFrame对象window(窗口)引用；
        window.setTitle("Arduino LCD Clock");           //设置窗口标题名
        window.setSize(400, 75);           //设置窗口大小
        window.setLayout(new BorderLayout());           //设置窗口布局器
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);          //实现窗口关闭功能

        // create a drop-down box and connect button, then place them at the top of the window
        JComboBox<String> portList = new JComboBox<String>();           //创建String型JComboBox(组合框)对象 portList引用；
        JButton connectButton = new JButton("Connect");            //创建JButton对象 connectButton(Connect按钮)引用；
        JPanel topPanel = new JPanel();                                 //创建窗口容器JPanel对象 topPanel引用；
        topPanel.add(portList);                                         //在窗口容器topPanel中添加组合框portList；
        topPanel.add(connectButton);                                    //在窗口容器topPanel中添加按钮connectButton；
        window.add(topPanel, BorderLayout.NORTH);                       //在窗口window中添加窗口容器topPanel；

        // populate the drop-down box
        SerialPort[] portNames = SerialPort.getCommPorts();             //创建一个SerialPort(串行端口)对象的集合portNames引用，并用getCommPorts()方法拿到串口列表；
        for (int i = 0; i < portNames.length; i++)                      //for循环  长度为portNames集合数量
            portList.addItem(portNames[i].getSystemPortName());         //在组合框portList中逐个添加portNames集合中的SerialPort(串行端口)对象名称；

        // configure the connect button and use another thread to send data
        connectButton.addActionListener(new ActionListener() {          //
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (connectButton.getText().equals("Connect")) {
                    // attempt to connect to the serial port
                    chosenPort = SerialPort.getCommPort(portList.getSelectedItem().toString());
                    chosenPort.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
                    if (chosenPort.openPort()) {
                        connectButton.setText("Disconnect");
                        portList.setEnabled(false);

                        // create a new thread for sending data to the arduino
                        Thread thread = new Thread() {
                            @Override
                            public void run() {
                                // wait after connecting, so the bootloader can finish
                                try {
                                    Thread.sleep(100);
                                } catch (Exception e) {
                                }

                                // enter an infinite loop that sends text to the arduino
                                PrintWriter output = new PrintWriter(chosenPort.getOutputStream());
                                while (true) {
                                    output.print(new SimpleDateFormat("hh:mm:ss a     MMMMMMM dd, yyyy").format(new Date()));
                                    output.flush();
                                    try {
                                        Thread.sleep(100);
                                    } catch (Exception e) {
                                    }
                                }
                            }
                        };
                        thread.start();
                    }
                } else {
                    // disconnect from the serial port
                    chosenPort.closePort();
                    portList.setEnabled(true);
                    connectButton.setText("Connect");
                }
            }
        });

        // show the window
        window.setVisible(true);
    }

}
